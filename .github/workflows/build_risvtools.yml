name: RISC-V 64-bit Linux Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:

  build:
    runs-on: ubuntu-20.04
    
    env:
      CORE_NUM: 4
      PORTBUILD_PATH: ${{ github.workspace }}/portbuild
      LUA_SRC: ${{ github.workspace }}/lua
      JPEG_SRC: ${{ github.workspace }}/libjpeg
      BZ2_SRC: ${{ github.workspace }}/bzip2
      SDL2_SRC: ${{ github.workspace }}/SDL2
      SDL2_IMAGE_SRC: ${{ github.workspace }}/SDL2_image
      SDL2_TTF_SRC: ${{ github.workspace }}/SDL2_ttf
      SDL2_MIXER_SRC: ${{ github.workspace }}/SDL2_mixer
      
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Prepare Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-riscv64-linux-gnu \
          binutils-riscv64-linux-gnu \
          libc6-dev-riscv64-cross
    
    - name: Build Lua
      run: |
        build_lua() {
          echo "## LUA_SRC=$LUA_SRC"
          make -C $LUA_SRC clean
          make -C $LUA_SRC all PLAT=linux CC=riscv64-linux-gnu-gcc AR="riscv64-linux-gnu-ar rcu" -j$CORE_NUM
          make -C $LUA_SRC install INSTALL_TOP=$PORTBUILD_PATH
        }
        build_lua
        
    - name: Build libjpeg  
      run: |
        build_jpeg() {
          if ! [ -d "${JPEG_SRC}/build_${PLATFORM}" ]; then mkdir -p "${JPEG_SRC}/build_${PLATFORM}"; fi
          echo "## JPEG_SRC=$JPEG_SRC"
          pushd "${JPEG_SRC}/build_${PLATFORM}"
          ../configure --host=riscv64-linux-gnu --prefix=$PORTBUILD_PATH
          make -j$CORE_NUM && make install
          popd
        }
        build_jpeg
        
    - name: Build bzip2
      run: |
        build_bz2() {
          echo "## BZ2_SRC=$BZ2_SRC"
          make -C $BZ2_SRC clean
          make -C $BZ2_SRC all CC=riscv64-linux-gnu-gcc AR=riscv64-linux-gnu-ar -j$CORE_NUM
          make -C $BZ2_SRC install PREFIX=$PORTBUILD_PATH
        }
        build_bz2
        
    - name: Build SDL2
      run: |
        build_sdl2() {
          if ! [ -d "${SDL2_SRC}/build_${PLATFORM}" ]; then mkdir -p "${SDL2_SRC}/build_${PLATFORM}"; fi
          echo "## SDL2_SRC=$SDL2_SRC"
          export CFLAGS="-Os"
          export CXXFLAGS="-Os"
          SDL2_SYSROOT=/
          if [ -n "$SYSROOT" ]; then SDL2_SYSROOT=$SYSROOT; fi
          echo "## SDL2_SYSROOT $SDL2_SYSROOT"
          pushd "${SDL2_SRC}/build_${PLATFORM}"
          ../configure --host=riscv64-linux-gnu --disable-pulseaudio --enable-video-x11 --enable-x11-shared --enable-video-x11-xcursor --enable-video-x11-xinput --enable-video-x11-xrandr --disable-video-wayland --prefix=$PORTBUILD_PATH --with-sysroot=$SDL2_SYSROOT
          make -j$CORE_NUM && make install
          popd
        }
        build_sdl2
        
    - name: Build SDL2_image
      run: |
        build_sdl2_image() {
          if ! [ -d "${SDL2_IMAGE_SRC}/build_${PLATFORM}" ]; then mkdir -p "${SDL2_IMAGE_SRC}/build_${PLATFORM}"; fi
          echo "## SDL2_IMAGE_SRC=$SDL2_IMAGE_SRC"
          export PKG_CONFIG_PATH=${PORTBUILD_PATH}/lib/pkgconfig
          pushd "${SDL2_IMAGE_SRC}/build_${PLATFORM}"
          ../configure --host=riscv64-linux-gnu --enable-stb_image --prefix=$PORTBUILD_PATH
          make -j$CORE_NUM && make install
          popd
        }
        build_sdl2_image
        
    - name: Build SDL2_ttf
      run: |
        build_sdl2_ttf() {
          if ! [ -d "${SDL2_TTF_SRC}/build_${PLATFORM}" ]; then mkdir -p "${SDL2_TTF_SRC}/build_${PLATFORM}"; fi
          echo "## SDL2_TTF_SRC=$SDL2_TTF_SRC"
          export PKG_CONFIG_PATH=${PORTBUILD_PATH}/lib/pkgconfig
          pushd "${SDL2_TTF_SRC}/build_${PLATFORM}"
          ../configure --host=riscv64-linux-gnu --disable-harfbuzz --prefix=$PORTBUILD_PATH
          make -j$CORE_NUM && make install
          popd
        }
        build_sdl2_ttf
        
    - name: Build SDL2_mixer
      run: |
        build_sdl2_mixer() {
          if ! [ -d "${SDL2_MIXER_SRC}/build_${PLATFORM}" ]; then mkdir -p "${SDL2_MIXER_SRC}/build_${PLATFORM}"; fi
          echo "## SDL2_MIXER_SRC=$SDL2_MIXER_SRC"
          export PKG_CONFIG_PATH=${PORTBUILD_PATH}/lib/pkgconfig
          pushd "${SDL2_MIXER_SRC}/build_${PLATFORM}"
          ../configure --host=riscv64-linux-gnu --prefix=$PORTBUILD_PATH
          make -j$CORE_NUM && make install
          popd
        }
        build_sdl2_mixer
        
    - name: Package Build Artifacts
      run: |
        cd $PORTBUILD_PATH
        tar -czf riscv64-linux-artifacts.tar.gz .
    
    - name: Upload Artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}/portbuild/riscv64-linux-artifacts.tar.gz
        asset_name: riscv64-linux-artifacts.tar.gz
        asset_content_type: application/gzip